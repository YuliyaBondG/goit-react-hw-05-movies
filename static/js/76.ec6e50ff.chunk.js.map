{"version":3,"file":"static/js/76.ec6e50ff.chunk.js","mappings":"sNACA,EAAgC,4BAAhC,EAAuE,uBAAvE,EAAyG,uBAAzG,EAA4I,wB,SCI/HA,EAAO,WAClB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQH,GAASI,KAAKL,EACvB,GAAE,CAACC,IAECF,EAIL,OACE,gBAAKO,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SACGR,EAAKS,KAAI,SAAAC,GAAK,OACb,gBAAIH,UAAWC,EAAf,WACE,gBACED,UAAWC,EAEXG,IACED,EAAME,aAAN,yCACsCF,EAAME,cAD5C,+CAIFC,IAAKH,EAAME,aACXE,QAAQ,OACRC,MAAM,MACNC,OAAO,OATFN,EAAMO,IAWZP,EAAMQ,OAdyBR,EAAMO,GAD3B,OAqBtB,C,+LCvCKE,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAAA,mCAAsCD,IAD9B,cACzBG,EADyB,OAE/BC,QAAQC,IAAIF,GAFmB,kBAGxBA,EAASG,MAHe,2CAAH,qDAMjBC,EAAY,mCAAG,WAAMT,GAAN,uFACHG,EAAAA,EAAAA,IAAA,gBACZH,EADY,oBACEE,EADF,oBADG,cACpBG,EADoB,yBAInBA,EAASG,MAJU,2CAAH,sDAOZE,EAAgB,mCAAG,WAAMC,GAAN,uFACPR,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACoBS,EADpB,+CADO,cACxBN,EADwB,yBAIvBA,EAASG,KAAKI,SAJS,2CAAH,sDAOhBxB,EAAO,mCAAG,WAAMH,GAAN,uFACEkB,EAAAA,EAAAA,IAAA,gBACZlB,EADY,4BACeiB,EADf,oBADF,cACfG,EADe,yBAIdA,EAASG,KAAKzB,MAJA,2CAAH,sDAOP8B,EAAU,mCAAG,WAAM5B,GAAN,uFACDkB,EAAAA,EAAAA,IAAA,gBACZlB,EADY,4BACeiB,EADf,2BADC,cAClBG,EADkB,yBAIjBA,EAASG,KAAKI,SAJG,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__NIXqj\",\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"castImage\":\"Cast_castImage__d8bQP\"};","import { getCast } from 'services/Api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\n\nexport const Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCast(movieId).then(setCast);\n  }, [movieId]);\n\n  if (!cast) {\n    return;\n  }\n\n  return (\n    <div className={css.castContainer}>\n      <ul className={css.castList}>\n        {cast.map(actor => (\n          <li className={css.castItem} key={actor.id}>\n            <img\n              className={css.castImage}\n              key={actor.id}\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n                  : `http://www.suryalaya.org/images/no_image.jpg`\n              }\n              alt={actor.profile_path}\n              loading=\"lazy\"\n              width=\"100\"\n              height=\"150\"\n            />\n            {actor.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = '1d2ce5babf28ef05892bea5e31f7dd12';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const responce = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  console.log(responce);\n  return responce.data;\n};\n\nexport const getMovieById = async id => {\n  const responce = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const responce = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return responce.data.results;\n};\n\nexport const getCast = async movieId => {\n  const responce = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const responce = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return responce.data.results;\n};\n"],"names":["Cast","useState","cast","setCast","movieId","useParams","useEffect","getCast","then","className","css","map","actor","src","profile_path","alt","loading","width","height","id","name","API_KEY","axios","getTrendingMovies","responce","console","log","data","getMovieById","getMoviesByQuery","query","results","getReviews"],"sourceRoot":""}