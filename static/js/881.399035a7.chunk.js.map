{"version":3,"file":"static/js/881.399035a7.chunk.js","mappings":"2LACA,EAA6B,+BAA7B,EAA8E,oCAA9E,EAAmI,mCAAnI,EAAuL,mCAAvL,EAA0O,kC,SCQ7NA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,SAAAC,GAAK,OACf,eAAIH,UAAWC,EAAf,UACE,UAAC,KAAD,CACED,UAAWC,EACXG,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMT,GAHjB,WAKE,cAAGE,UAAWC,EAAd,SAAoCE,EAAMK,OAASL,EAAMM,QACzD,gBACET,UAAWC,EACXS,IACEP,EAAMQ,YApBN,mCAqBcR,EAAMQ,YAlBlC,6EAqBYC,IAAKT,EAAMK,MACXK,MAAM,YAf4BV,EAAME,GAD/B,KAuBtB,C,mHCnCD,EAA6B,2BAA7B,EAAsE,4BAAtE,EAA8G,0B,SCmD9G,EA9Ce,WACb,OAA0BS,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAeoB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAoBA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMN,EAAQI,EAAaG,IAAI,SAC1BP,IAILQ,EAAAA,EAAAA,IAAiBR,GAAOS,KAAKP,EAC9B,GAAE,CAACE,KAEF,iCACE,2BACE,kBAAMnB,UAAWC,EAAgBwB,SAjBlB,SAAAC,GACnBA,EAAEC,iBACFP,EAAgB,CAAEL,MAAAA,IAClBC,EAAS,GACV,EAaK,WACE,kBACEhB,UAAWC,EACX2B,aAAa,MACbC,KAAK,OACLpB,KAAK,QACLqB,YAAY,qBACZC,SA5BW,SAAAL,GACnBV,EAASU,EAAEM,OAAOC,MACnB,EA2BSA,MAAOlB,KAET,mBAAQf,UAAWC,EAAe4B,KAAK,SAAvC,gCAKJ,SAACjC,EAAA,EAAD,CAAYC,OAAQA,MAGzB,C,+LChDKqC,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAAA,mCAAsCD,IAD9B,cACzBG,EADyB,OAE/BC,QAAQC,IAAIF,GAFmB,kBAGxBA,EAASG,MAHe,2CAAH,qDAMjBC,EAAY,mCAAG,WAAMpC,GAAN,uFACH8B,EAAAA,EAAAA,IAAA,gBACZ9B,EADY,oBACE6B,EADF,oBADG,cACpBG,EADoB,yBAInBA,EAASG,MAJU,2CAAH,sDAOZjB,EAAgB,mCAAG,WAAMR,GAAN,uFACPoB,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACoBnB,EADpB,+CADO,cACxBsB,EADwB,yBAIvBA,EAASG,KAAKE,SAJS,2CAAH,sDAOhBC,EAAO,mCAAG,WAAMC,GAAN,uFACET,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACeV,EADf,oBADF,cACfG,EADe,yBAIdA,EAASG,KAAKK,MAJA,2CAAH,sDAOPC,EAAU,mCAAG,WAAMF,GAAN,uFACDT,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACeV,EADf,2BADC,cAClBG,EADkB,yBAIjBA,EAASG,KAAKE,SAJG,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\",\"moviesListTitle\":\"MoviesList_moviesListTitle__fjOf0\",\"moviesListItem\":\"MoviesList_moviesListItem__OFqms\",\"moviesListLink\":\"MoviesList_moviesListLink__8Ci-i\",\"moviesListImg\":\"MoviesList_moviesListImg__F+Cfs\"};","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport css from './MoviesList.module.css';\n\nconst baseUrl = 'https://image.tmdb.org/t/p/w500/';\n\nconst DEFAULT_MOVIE_POSTER =\n  'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie.jpg';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.moviesList}>\n      {movies.map(movie => (\n        <li className={css.moviesListItem} key={movie.id}>\n          <Link\n            className={css.moviesListLink}\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n          >\n            <p className={css.moviesListTitle}>{movie.title || movie.name}</p>\n            <img\n              className={css.moviesListImg}\n              src={\n                movie.poster_path\n                  ? baseUrl + movie.poster_path\n                  : DEFAULT_MOVIE_POSTER\n              }\n              alt={movie.title}\n              width=\"400\"\n            />\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesForm\":\"Movies_moviesForm__Yo2Oo\",\"moviesInput\":\"Movies_moviesInput__UOzRX\",\"moviesBtn\":\"Movies_moviesBtn__bJE3E\"};","import { getMoviesByQuery } from 'services/Api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query });\n    setQuery('');\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) {\n      return;\n    }\n\n    getMoviesByQuery(query).then(setMovies);\n  }, [searchParams]);\n  return (\n    <>\n      <main>\n        <form className={css.moviesForm} onSubmit={handleSubmit}>\n          <input\n            className={css.moviesInput}\n            autoComplete=\"off\"\n            type=\"text\"\n            name=\"movie\"\n            placeholder=\"Enter the movie...\"\n            onChange={handleChange}\n            value={query}\n          />\n          <button className={css.moviesBtn} type=\"submit\">\n            Search movie\n          </button>\n        </form>\n      </main>\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '1d2ce5babf28ef05892bea5e31f7dd12';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const responce = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  console.log(responce);\n  return responce.data;\n};\n\nexport const getMovieById = async id => {\n  const responce = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const responce = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return responce.data.results;\n};\n\nexport const getCast = async movieId => {\n  const responce = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const responce = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return responce.data.results;\n};\n"],"names":["MoviesList","movies","location","useLocation","className","css","map","movie","to","id","state","from","title","name","src","poster_path","alt","width","useState","query","setQuery","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","get","getMoviesByQuery","then","onSubmit","e","preventDefault","autoComplete","type","placeholder","onChange","target","value","API_KEY","axios","getTrendingMovies","responce","console","log","data","getMovieById","results","getCast","movieId","cast","getReviews"],"sourceRoot":""}